/include/ "system-conf.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/media/xilinx-vip.h>

/ {
	model = "Zynq Zybo Z7 Development Board";
	compatible = "digilent,zynq-zyboz7", "xlnx,zynq-7000";

	chosen {
		bootargs = "console=ttyPS0,115200 earlyprintk uio_pdrv_genirq.of_id=generic-uio";
	};

	usb_phy0: usb_phy@0 {
		compatible = "ulpi-phy";
		#phy-cells = <0>;
		reg = <0xe0002000 0x1000>;
		view-port = <0x0170>;
		drv-vbus;
	};

    // https://xilinx-wiki.atlassian.net/wiki/spaces/A/pages/18841683/Linux+Reserved+Memory
	// In UG585, page 112, table 4-1, there is a system level address map.  If you are using
	//    the US\+ Zynq, then you can find it in UG1085, page 188, table 10-1.
	// before no-map
	// root@Petalinux-2022:~# cat /proc/iomem
	// 00000000-3fffffff : System RAM
	//   00008000-00afffff : Kernel code
	//   00c00000-014aef73 : Kernel data
	// reserved: buffer@0x38000000 is above the current linux claim

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		// reserved for fpga register map
		reserved_regs: reserved_regs@0 {
			no-map;
			// 0x08000000 (134,217,728) bytes of 1G ddr memory for fpga register mapping
			// placed at top of ddr map
			// map region 0010_0000 to 3FFF_FFFF - DDR Accessible to all interconnect masters
			reg = <0x38000000 0x08000000>;
		};

		// reserved for dma buffer
		reserved_dma: reserved_dma@0 {
			no-map;
			// 0x10000000 (268,435,456) bytes of 1G ddr memory for dma register mapping
			// placed just before reserved_regs map
			// map region 0010_0000 to 3FFF_FFFF - DDR Accessible to all interconnect masters
			reg = <0x28000000 0x10000000>;
		};
	};

	// register space
	uio-reserved-regs@0x38000000 {
		compatible = "generic-uio";
		//memory-region = <&reserved_regs>;
		reg = <0x38000000 0x08000000>;
        // can i devmem an assigned interrupt ?
		// intc has num_interrupts = <0x60>; is 96 base 10
		// irq# 0-15 are sw generated interrupts
		// pl possible interrupts for 7000 are: 63:61, 68:64, 91:84 (see trm)
		interrupt-parent = <&intc>;
		// 1 = L->H edge, 2 = H->L edge, 4 = H level, 8 = L level
		// interrupts = <0 89 1>;
		interrupts = <0 0 1>;
	};

	// dma
	uio-reserved-dma@0x38000000 {
		// compatible = "xlnx,reserved-memory";
		compatible = "generic-uio";
		//memory-region = <&reserved_dma>;
		reg = <0x28000000 0x10000000>;
	};

	// The SGI interrupts are always edge sensitive and are generated when software writes the interrupt
	// number to ICDSGIR register. All of the targeted CPUs defined in the ICDIPTR [23:8] must handle the
	// interrupt in order to clear it.

	// // ICDICFR0 0xF8F01C00 - ro, sgi sensitivity
	// devmem 0xF8F01C00

	// // ICDIPTR0 0xF8F01800 - ro, enable cpu(s) for int ids 0:3, always 01 cpu0
	// devmem 0xF8F01800
	// devmem 0xF8F01800 32 0x3
	// devmem 0xF8F01800

	// // ICDSGIR 0xF8F01F00 - to generate swi
	// devmem 0xF8F01F00
    // devmem 0xF8F01F00 32 0x03000000
	// devmem 0xF8F01F00 32 0x03000001
    // devmem 0xF8F01F00 32 0x01000000
	// devmem 0xF8F01F00 32 0x01000001

	// fpga regs
	// reg space must be 0x10000 minimum
	fpga_registers: fpga_registers@0x38000000 {
		compatible ="generic-uio";
		reg = <0x38000000 0x08000000>;
        // can i devmem an assigned interrupt ?
		// intc has num_interrupts = <0x60>; is 96 base 10
		// irq# 0-15 are sw generated interrupts
		// pl possible interrupts for 7000 are: 63:61, 68:64, 91:84 (see trm)
		interrupt-parent = <&intc>;
		// 1 = L->H edge, 2 = H->L edge, 4 = H level, 8 = L level
		// interrupts = <0 89 1>;
		interrupts = <0 0 1>;
	};

    // btn_4 {
    //     compatible ="generic-uio";
    //     interrupt-parent = <&gpio0>;
    //     // interrupt-parent = <&intc>; // use intc for PL emio interrupt
    //     // bit fields 0 = L->H edge, 1 = H->L edge, 2 = H level, 3 = L level
    //     // interrupts = <0 50 1>;
    //     // mio 50, rising edge
    //     // interrupts = <50 1>; // did not appear in /proc/interrupt with intc

    //     // test with offset interrupt number mio# + 32, rising edge
    //     interrupts = <82 1>;
    // };

    // btn_5 {
    //     compatible ="generic-uio";
    //     interrupt-parent = <&gpio0>;
    //     // bit fields 0 = L->H edge, 1 = H->L edge, 2 = H level, 3 = L level
    //     // mio 50, rising edge
    //     interrupts = <51 1>;
    // };
};

&gem0 {
        phy-handle = <&ethernet_phy>;
        ethernet_phy: ethernet-phy@0 {
                device_type = "ethernet-phy";
                reg = <0>;
                /* dt-bindings/phy/realtek.h */
                /* #define REALTEK_LED_LINK10              BIT(0)
                   #define REALTEK_LED_LINK100             BIT(1)
                   #define REALTEK_LED_LINK1000            BIT(3)
                   #define REALTEK_LED_ACT                 BIT(4)
                   #define REALTEK_LED_DEFAULT             BIT(7)
                */
                /* LED0=10+A, LED1=100+A, LED2=1000+A */
                realtek,leds-config = <0x11 0x12 0x18>;
        };
};

&usb0 {
	dr_mode = "host";
	usb-phy = <&usb_phy0>;
};

&flash0 {
        compatible = "jedec,spi-nor";
        reg = <0x0>;
        spi-tx-bus-width = <1>;
        spi-rx-bus-width = <4>;
        spi-max-frequency = <100000000>;
};

&amba_pl {
	digilent_hdmi {
		compatible = "digilent,hdmi";

		clocks = <&axi_dynclk_0>;
		clock-names = "clk";

		digilent,edid-i2c = <&i2c0>;
		digilent,fmax = <150000>;

		port@0 {
			hdmi_ep: endpoint {
				remote-endpoint = <&pl_disp_ep>;
			};
		};
	};

	xlnx_pl_disp {
		compatible = "xlnx,pl-disp";

		dmas = <&axi_vdma_1 0>;
		dma-names = "dma0";

		/*
		 * See Documentation/devicetree/bindings/dma/xilinx/xilinx_frmbuf.txt
		 * to find the equivalent DRM fourcc code for the format selected in
		 * the Frame Buffer Reader, then see See include/uapi/drm/drm_fourcc.h
		 * to find the corresponding 4-char string that should be placed here.
		 */
		xlnx,vformat = "XR24";
		xlnx,bridge = <&v_tc_out>;

		port@0 {
			pl_disp_ep: endpoint {
				remote-endpoint = <&hdmi_ep>;
			};
		};
	};
};

&v_tc_out {
	compatible = "xlnx,bridge-v-tc-6.1";
	xlnx,pixels-per-clock = <1>;
};

&axi_dynclk_0 {
	compatible = "dglnt,axi-dynclk";
	#clock-cells = <0>;
	clocks = <&clkc 15>;
};

&axi_vdma_1 {
	dma-ranges = <0x00000000 0x00000000 0x40000000>;
};

&v_tc_in {
	compatible = "generic-uio";
};

&axi_vdma_0 {
	compatible = "generic-uio";
};

&axi_gpio_video {
	compatible = "generic-uio";
};

&pwm_rgb {
	compatible = "generic-uio";
};

&amba_pl {
	i2s_clk: i2s_clk {
		#clock-cells = <0>;
		compatible = "fixed-clock";
		clock-frequency = <12000000>;
		clock-output-names = "i2s_clk";
	};

	sound {
		compatible = "simple-audio-card";
		simple-audio-card,name = "Zybo-Z7-Sound-Card";
		simple-audio-card,format = "i2s";
		simple-audio-card,bitclock-master = <&dailink0_master>;
		simple-audio-card,frame-master = <&dailink0_master>;

		simple-audio-card,widgets =
			"Microphone", "Microphone Jack",
			"Headphone", "Headphone Jack",
			"Line", "Line In Jack";

		simple-audio-card,routing =
			"MICIN", "Microphone Jack",
			"Headphone Jack", "LHPOUT",
			"Headphone Jack", "RHPOUT",
			"LLINEIN", "Line In Jack",
			"RLINEIN", "Line In Jack";

		dailink0_master: simple-audio-card,cpu {
			clocks = <&i2s_clk>;
			sound-dai = <&axi_i2s_adi_1>;
		};

		simple-audio-card,codec {
			clocks = <&i2s_clk>;
			sound-dai = <&ssm2603>;
		};
	};
};

&axi_i2s_adi_1 {
	#sound-dai-cells = <0>;
	compatible = "adi,axi-i2s-1.00.a";
	clocks = <&clkc 15>, <&i2s_clk>;
	clock-names = "axi", "ref";
	dmas = <&dmac_s 0 &dmac_s 1>;
	dma-names = "tx", "rx";
};

&i2c0 {
	clock-frequency = <100000>;
	status = "okay";
};

&i2c1 {
	ssm2603: ssm2603@1a{
		#sound-dai-cells = <0>;
		compatible = "adi,ssm2603";
		reg = <0x1a>;
	};
};

&axi_gpio_led {
	compatible = "generic-uio";
};


&axi_gpio_sw_btn {
	compatible = "generic-uio";
};

&axi_gpio_eth {
	clock-names = "s_axi_aclk";
	clocks = <&clkc 15>;
};
